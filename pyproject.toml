[build-system]
requires = ["setuptools>=42", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
version_scheme = "guess-next-dev"
local_scheme = "dirty-tag"

[project]
name = "workbench"
dynamic = ["version"]
description = "Workbench: A Dashboard and Python API for creating and deploying AWS SageMaker Model Pipelines"
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9"
keywords = ["SageMaker", "Machine Learning", "AWS", "Python", "Utilities"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
]
authors = [{ name = "SuperCowPowers LLC", email = "support@supercowpowers.com" }]

dependencies = [
    "boto3 >= 1.28.76",
    "botocore >= 1.31.76",
    "redis >= 5.0.1",
    "numpy >= 1.26.4",
    "pandas >= 2.2.1",
    "awswrangler >= 3.4.0",
    "sagemaker >= 2.143",
    "cryptography >= 42.0.5",
    "ipython >= 8.17.2",
    "pyreadline3; sys_platform == 'win32'",
    "xgboost >= 2.0.3",
    "scikit-learn >=1.4.2, <= 1.5.2",
    "joblib >= 1.3.2",
    "requests >= 2.26.0",
    "rdkit>=2024.3.3",
    "mordredcommunity>=2.0.6",
]

[project.optional-dependencies]
ml-tools = ["shap>=0.46.0", "networkx>=3.2"]
ui = [
    "plotly>=5.18.0",
    "dash>=2.16.1",
    "dash-bootstrap-components>=1.6.0",
    "dash-bootstrap-templates>=1.3.0",
    "dash_ag_grid",
    "tabulate>=0.9.0",
    "matplotlib>=3.9.2",
]
dev = ["pytest", "pytest-sugar", "coverage", "pytest-cov", "flake8", "black"]
all = [
    "shap>=0.46.0",
    "networkx>=3.2",
    "plotly>=5.18.0",
    "dash>=2.16.1",
    "dash-bootstrap-components>=1.6.0",
    "dash-bootstrap-templates>=1.3.0",
    "dash_ag_grid",
    "tabulate>=0.9.0",
    "pytest",
    "pytest-sugar",
    "coverage",
    "pytest-cov",
    "flake8",
    "black",
]

[project.urls]
Homepage = "https://github.com/SuperCowPowers/workbench"

[tool.setuptools]
package-dir = {"" = "src"}
packages = { find = { where = ["src"] } }

[tool.setuptools.package-data]
"workbench" = [
    "resources/signature_verify_pub.pem",
    "resources/open_source_api.key",
    "model_scripts/**",
    "themes/**"
]

[project.scripts]
workbench = "workbench.repl.workbench_shell:launch_shell"
cloud_watch = "workbench.scripts.monitor_cloud_watch:main"
workbench_config = "workbench.scripts.show_config:main"

[tool.pytest.ini_options]
addopts = "-v --cov-report term-missing"
python_files = "*.py"
python_functions = "test"
norecursedirs = [".tox", ".git", "*.egg-info", "__pycache__", "dist", "build"]
markers = [
    "long: marks tests as long (deselect with '-m \"not long\"')"
]

[tool.coverage.run]
relative_files = true
